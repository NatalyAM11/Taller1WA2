{"version":3,"sources":["components/Link/Link.tsx","components/Character/Character.tsx","components/CharacterForm/CharacterForm.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Link","text","active","url","className","href","Character","name","img","src","CharacterForm","onCreate","React","useState","formSubmitted","setFormSubmitted","setName","mainImg","setMainImg","nameValid","length","mainImgValid","onSubmit","event","preventDefault","console","log","type","onChange","target","value","App","CharactersElems","setCharacters","newCharacter","newArrayCharacter","id","Math","random","map","elem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RASaA,EAA4B,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,IACjDC,EAAY,OAMd,OAJCF,IACCE,EAAY,iBAGP,mBAAGA,UAAWA,EAAWC,KAAMF,EAA/B,SACNF,KCRMK,G,MAAsC,SAAC,GAAe,IAAdC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,IAErD,OAAQ,sBAAKJ,UAAU,YAAf,UACF,oBAAIA,UAAU,gBAAd,SAA+BG,IAC/B,qBAAKH,UAAU,eAAeK,IAAKD,SCJlCE,G,MAA8C,SAAC,GAAc,IAAbC,EAAY,EAAZA,SAGzD,EAAyCC,IAAMC,UAAS,GAAxD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,EAAwBH,IAAMC,SAAS,KAAvC,mBAAON,EAAP,KAAaS,EAAb,KAKA,EAA8BJ,IAAMC,SAAS,KAA7C,mBAAOI,EAAP,KAAgBC,EAAhB,KAMMC,EAAWZ,EAAKa,OAAO,EACvBC,EAAcJ,EAAQG,OAAO,GAqBnC,OAAO,uBAAMhB,UAAU,gBAAgBkB,SAnBsB,SAACC,GAC1DA,EAAMC,iBAENT,GAAiB,GAEdI,GAAaE,GACZI,QAAQC,IAAI,SAEZf,EAAS,CACLJ,KAAMA,EACNC,IAAKS,KAITQ,QAAQC,IAAI,YAKb,UAEH,oBAAItB,UAAU,YAAd,wBAEA,2CAEI,uBAAOuB,KAAK,OAAOpB,KAAK,OAAOqB,SAtC6B,SAACL,GACjEP,EAAQO,EAAMM,OAAOC,QAqC0CA,MAAOvB,IAChEO,IAAkBK,GAChB,mBAAGf,UAAU,sBAAb,uDAKR,2CAEI,uBAAOuB,KAAK,OAAOpB,KAAK,UAAUqB,SA1C6B,SAACL,GACpEL,EAAWK,EAAMM,OAAOC,QAyC6CA,MAAOb,IACtEH,IAAkBO,GAChB,mBAAGjB,UAAU,sBAAb,4DAIR,2CAEI,0BAAUA,UAAU,kBAIxB,wCAEI,uBAAOuB,KAAK,YAGhB,yCAEI,uBAAOA,KAAK,YAGhB,oDAEI,uBAAOA,KAAK,YAGhB,oBAAIvB,UAAU,eAAd,mBAEA,0CAEI,uBAAOuB,KAAK,YAGhB,6CAEI,uBAAOA,KAAK,YAGhB,0CAEI,uBAAOA,KAAK,YAGhB,wBAAQvB,UAAU,SAAlB,4BCxCO2B,MAtDf,WAGE,MAAwCnB,IAAMC,SAA6B,IAA3E,mBAAOmB,EAAP,KAAwBC,EAAxB,KAiBA,OACE,qBAAK7B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKA,UAAU,MAAf,UACE,mBAAGC,KAAK,2BAAR,SAAmC,qBAAKI,IAAI,oBAAoBL,UAAU,cAC1E,cAAC,EAAD,CACMH,KAAK,aACLE,IAAI,6BAEV,cAAC,EAAD,CACMF,KAAK,QACLE,IAAI,6BAEV,cAAC,EAAD,CACMF,KAAK,aACLE,IAAI,6BAEV,qBAAKM,IAAI,qBAAqBL,UAAU,gBAG3C,cAAC,EAAD,CAAeO,SAnCD,SAAEuB,GACnBT,QAAQC,IAAI,UAAWQ,GAEvB,IAAMC,EAAkB,GAAD,mBAClBH,GADkB,CAErB,CACEI,GAAIC,KAAKC,SACT/B,KAAM2B,EAAa3B,KACnBC,IAAK0B,EAAa1B,OAItByB,EAAcE,MAyBZ,yBAAS/B,UAAU,UAAnB,SACE4B,EAAgBO,KAAK,SAACC,GACrB,OAAO,cAAC,EAAD,CAAyBjC,KAAMiC,EAAKjC,KAAMC,IAAKgC,EAAKhC,KAApCgC,EAAKJ,eC1CtBK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.63a6caab.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Link.css';\r\n\r\ninterface LinkProps{\r\n    text:string,\r\n    active?:boolean,\r\n    url:string\r\n}\r\n\r\nexport const Link: React.FC<LinkProps> = ({text, active, url})=>{\r\n    let className = 'Link';\r\n\r\n    if(active) {\r\n        className = 'Link_selected';\r\n    }\r\n    \r\n      return <a className={className} href={url}>\r\n      {text}\r\n      </a>;\r\n\r\n}","import React from 'react';\r\nimport './Character.css';\r\n\r\n\r\nexport interface CharacterProps{\r\n    name:string,\r\n    img:string\r\n}\r\n\r\nexport const Character: React.FC<CharacterProps> = ({name, img})=>{\r\n    \r\n      return (<div className=\"character\">\r\n            <h2 className=\"characterName\">{name}</h2>\r\n            <img className=\"characterImg\" src={img}></img>\r\n      </div>);\r\n\r\n}\r\n\r\nexport default Character;\r\n","import React from 'react';\r\nimport {CharacterProps} from \"../Character/Character\"\r\nimport './CharacterForm.css';\r\n\r\n//evento cuando se crea el personaje\r\ninterface CharacterFormProps{\r\n    onCreate: (newCharacter: CharacterProps)=>void;\r\n}\r\n\r\nexport const CharacterForm: React.FC<CharacterFormProps> = ({onCreate})=>{\r\n\r\n    \r\n    const [formSubmitted, setFormSubmitted] =React.useState(false);\r\n\r\n    const [name, setName] = React.useState(' ');\r\n    const handleNameChange: React.ChangeEventHandler<HTMLInputElement> =(event)=>{\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const [mainImg, setMainImg ]= React.useState(' ');\r\n    const handleMainImgChange: React.ChangeEventHandler<HTMLInputElement> =(event)=>{\r\n        setMainImg(event.target.value)\r\n    }\r\n\r\n\r\n    const nameValid= name.length>1;\r\n    const mainImgValid= mainImg.length>10;\r\n    \r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> =(event)=>{\r\n        event.preventDefault();\r\n\r\n        setFormSubmitted(true);\r\n\r\n        if(nameValid && mainImgValid){\r\n            console.log('valid')\r\n\r\n            onCreate({\r\n                name: name,\r\n                img: mainImg\r\n            })\r\n\r\n        } else{\r\n            console.log('invalid')\r\n        }\r\n    }\r\n\r\n    \r\n    return <form className=\"characterForm\" onSubmit={handleSubmit}>\r\n\r\n        <h3 className=\"titleForm\">FORMULARIO</h3>\r\n\r\n        <label>\r\n            Nombre\r\n            <input type=\"text\" name=\"name\" onChange={handleNameChange} value={name}></input>\r\n            {(formSubmitted && !nameValid) &&\r\n                <p className=\"CharacterForm_error\">Debes escribir el nombre del personaje</p>\r\n            }\r\n            \r\n        </label>\r\n\r\n        <label>\r\n            Imagen\r\n            <input type=\"text\" name=\"MainImg\" onChange={handleMainImgChange} value={mainImg}></input>\r\n            {(formSubmitted && !mainImgValid) &&\r\n                <p className=\"CharacterForm_error\">Debes escribir el URL completo de la imagen</p>\r\n            }\r\n        </label>\r\n\r\n        <label>\r\n            Perfil\r\n            <textarea className=\"largeInput\"></textarea>\r\n        </label>\r\n        \r\n\r\n        <label>\r\n            Rol\r\n            <input type=\"text\"></input>\r\n        </label>\r\n\r\n        <label>\r\n            Arma\r\n            <input type=\"text\"></input>\r\n        </label>\r\n\r\n        <label>\r\n            Constelación\r\n            <input type=\"text\"></input>\r\n        </label>\r\n\r\n        <h4 className=\"subtitleForm\">Stats</h4>\r\n\r\n        <label>\r\n            Arena\r\n            <input type=\"text\"></input>\r\n        </label>\r\n\r\n        <label>\r\n            Cáliz\r\n            <input type=\"text\"></input>\r\n        </label>\r\n\r\n        <label>\r\n            Tiara\r\n            <input type=\"text\"></input>\r\n        </label>\r\n\r\n        <button className=\"button\">AÑADIR</button>\r\n    </form>;\r\n\r\n}","import React from 'react';\nimport './App.css';\nimport {Link} from '../Link/Link'\nimport {MainTitle} from '../mainTitle/MainTitle'\nimport {ElementTitle} from '../ElementTitle/ElementTitle'\nimport {Character, CharacterProps} from '../Character/Character'\nimport { CharacterForm } from '../CharacterForm/CharacterForm';\n\ntype CharacterElemObj= CharacterProps &{\n  id: number;\n}\n\nfunction App() {\n\n  //Estado del arreglo de personajes\n  const [CharactersElems, setCharacters]= React.useState<CharacterElemObj[]>([])\n\n  const handleCreate=( newCharacter: CharacterProps)=>{\n    console.log('Se creo', newCharacter)\n\n    const newArrayCharacter=[\n      ...CharactersElems,\n      {\n        id: Math.random(),\n        name: newCharacter.name,\n        img: newCharacter.img\n      }\n    ]\n\n    setCharacters(newArrayCharacter);\n  }\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <nav className=\"nav\">\n          <a href=\"https://www.youtube.com/\"><img src=\"./img/navLogo.png\" className=\"navLogo\"></img></a>\n          <Link\n                text=\"PERSONAJES\"\n                url=\"https://www.youtube.com/\"\n            />\n          <Link\n                text=\"ARMAS\"\n                url=\"https://www.youtube.com/\"\n            />\n          <Link\n                text=\"ARTEFACTOS\"\n                url=\"https://www.youtube.com/\"\n          />\n          <img src=\"./img/userIcon.png\" className=\"userIcon\"></img>\n        </nav>\n\n       <CharacterForm onCreate={handleCreate}/>  \n      \n      <article className=\"content\">\n       {CharactersElems.map ((elem) =>{\n         return <Character key={elem.id} name={elem.name} img={elem.img}/>\n       })} \n       </article>\n       \n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}